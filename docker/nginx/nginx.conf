# コア
# 実行ユーザー。php-fpmの listen.owner listern.group と合わせておく
user www-data;
# workerのプロセス数。数字で指定もできるが、autoでいい
worker_processes auto;
# プロセスIDを保存する場所を設定
pid /run/nginx.pid
# モジュールを読み込む
# Dockerコンテナを作る際にapt-get nginxで入ってきたもの。環境によってはパスが違う可能性がある
include /etc/nginx/modules-enables/*.conf

events {
    # 1つのワーカープロセスが同時に処理できる最大接続数。1G
    worker_connections 1024;
}

http {
    # 基本的な設定
    sendfile on; # ファイルを効率よく送信するAPIを使う。tcp_nopush onとペアで使う。
    tcp_nopush on; # レスポンスヘッダーとファイルを一緒に送信する。効率がいい。

    # TCPコネクションを切断するまでの時間。
    # AWS ALBを使っているならアイドルタイムアウトより大きい数字にしないとエラーが起きる。
    # AWS ALBが切断されたTCPコネクションを利用しようとする為
    # ALBのデフォルトが60秒なのでそれより大きくしておく。
    keepalive_timeout 65;
    types_hash_max_size 2048; # ハッシュテーブルのサイズを設定
    server_tokens off; # Nginxを使っている事を隠す

    # MIMEタイプと拡張子関連付け定義ファイルを読み込む
    include /etc/nginx/mime.types;
    # 拡張子関連づけ定義を使っても解決できなかった拡張子に対して、
    # ファイルの種類がわからないと言うMIMEを付与する
    default_type application/octet-stream;

    # TLSの設定
    ssl_protocols TLSv1.2; # TLSだけ対応すればいい。TLSv1と1.1は脆弱性がある為、必要に応じて
    # サーバ側指定の暗号スイートを優先する。今回は設定してないのでnginxのデフォルト
    ssl_prefer_server_ciphers on;
    # AWS ALB => AWS ECS => Nginx と通信がくる場合、
    # SSLの解決をロードバランサがしてくれているので、Docker/Nginxは８０番ポートの開放だけになることが多い。
    # そうするとSSLの記述は無用かもしれない（要調査）

    # ログの設定
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
        '$status $body_bytes_sent "$http_referer" '
        '"$http_user_agent" "$http_x_forwarded_for"'; # ログの見た目。mainと言う名前にする
    access_log /dev/stdout main; # 上で設定したログの見た目を使うための main
    error_log /dev/stdout; # ログをstdout（画面表示）。ファイルに書き出したい時はファイルパスを書く

    # Gzipの設定
    gzip on; # ファイルを圧縮する
    gzip_disable "msie6"; #IE6は圧縮ファイルを開けないので圧縮しない
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript; # 圧縮するMIME

    server {
        listen 80 default_server;

        # default_serverを設置かつ、１台しかバーチャルサーバがない時
        # あえてserver_nameを書かない事で、全てのアクセスをこのサーバに向けることを明示できる。
        # AWS ALBを使っている場合、ロードバランサ側で処理をすべきのため記述しない
        # server_name example.net www.example.net;

        # ドキュメントルートの設定。
        # これを設定すると、このサーバは設定したパスの配下のファイルを参照する
        # Laravelと連携するには、publicディレクトリのパスを記述する
        # 下の場合は/var/www/html/ディレクトリにlaravelアプリが配置されている事になる
        root /var/www/html/public;

        # インデックスの指定
        # laravelにおけるインデックスはpublic/index.phpなので、index.phpを追記する
        index index.html index.htm index.php;
        charset utf-8; # キャラセット。UTF-8でいい

        # デバッグの時だけコメントアウトを外して動きを確認する。
        # error_log /dev/stdout debug;

        # Webアプリを動かす為にヘッダー情報を追加する
        add_header X-Frame-Options "SAMEORIGIN" # クリックジャッキング攻撃の防止。他ドメインからiframeでサイトを表示させるのを防ぐ
        add_header X-XSS-Protection "1; mode=block" # XSS攻撃の防止。検知するとレンダリングを停止する
        add_header X-Content-Type-Options "nosniff"; # MIMEタイプのスニッフィングを防止

        # 全てのアクセスに対しての処理。左からドキュメントルート配下を参照する。以下の場合は3つのステップを踏んでいる
        # １）　アクセスがきたパスの静的ファイルが存在するか
        # 2)　アクセスがきたパスのディレクトリが存在するか（見つかったらその中の indexを参照する）
        # 3)　上の二つがない場合、index.phpのファイルとする（Laravelに処理を任せる）
        location / {
            try_files $uri $uri/ /index.php?$query_string;
        }

        # 静的ファイルの時の処理。正規表現によるパターンマッチングが使える
        location ~* \.(jpg|jpeg|gif|css|png|js|ico|svg)$ {
            expires 30d; # キャッシュの設定。クエリーを変更の処理がしっかりさmaxでもいい。今回は30日
            log_not_found off; # ログを出さない。publicサーバは攻撃に晒されていてログがたくさん出てしまうため
            access_log off; # 同じ理由でアクセスログも見えないようにしている
        }

        # 動的ファイルの時の処理
        location ~ \.php$ {
            # PHPをプログラムとして動かしてくれるPHP-FPMのソケットをFastCGIのパスとしてつなげる。
            # メモリに展開させる。FPM側の設定のlistenとパスを合わせる
            fastcgi_pass unix:/cyberowl/storage/php-fpm.sock;
            fastcgi_index index.php; # FastCGIのindexファイル名。indexと同じものを設定

            # PHP-FPMがプログラムを実行するときに必要なパラメータを渡す。サーバ変数のようなもの。
            # パスだけでなく、リクエストヘッダーだったりスキーマ情報だったりを渡している。
            fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
            include fastcgi_params; # その他FastCGI設定ファイルを読み込む
        }

        # プロキシ設定
        location /devserver/ {
            proxy_pass http://app-mem-vision:5173/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

    }

}
